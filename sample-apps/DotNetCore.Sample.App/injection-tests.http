### Test SSRF

# direct Test
GET https://localhost:7086/ssrf/direct

### Test SSRF

# redirect Test
GET https://localhost:7086/ssrf/redirect


### Test SQL Injection against SqlServer

# Baseline Test
GET https://localhost:7086/database/inject/SqlServer?name=Admin

### Test SQL Injection against SqlServer

# Basic OR-based injection
GET https://localhost:7086/database/inject/SqlServer?name=Admin' OR '1'='1

### Test SQL Injection against SqlServer

# Union-based injection
GET https://localhost:7086/database/inject/SqlServer?name=Admin' UNION SELECT null, @@version--

### Test SQL Injection against SqlServer

# Error-based injection
GET https://localhost:7086/database/inject/SqlServer?name=Admin' OR 1=CONVERT(int, (SELECT @@version))--

### Test SQL Injection against SqlServer

# Time-based Blind SQL injection
GET https://localhost:7086/database/inject/SqlServer?name=Admin'; WAITFOR DELAY '00:00:10'--

### Test SQL Injection against Sqlite

# Baseline Test
GET https://localhost:7086/database/inject/Sqlite?name=Admin

### Test SQL Injection against Sqlite

# Basic OR-based injection
GET https://localhost:7086/database/inject/Sqlite?name=Admin' OR '1'='1

### Test SQL Injection against Sqlite

# Union-based injection
GET https://localhost:7086/database/inject/Sqlite?name=Admin' UNION SELECT null, sqlite_version()--

### Test SQL Injection against Sqlite

# Error-based injection (SQLite doesn't output errors but is known for using type confusion)
GET https://localhost:7086/database/inject/Sqlite?name=Admin' || (SELECT randomblob(1000000000))--

### Test SQL Injection against Sqlite

# Time-based Blind SQL injection (SQLite doesn't support this, hypothetical example might be pause via recursive CTE)
GET https://localhost:7086/database/inject/Sqlite?name=Admin' || (SELECT sleep(10))--

### Test SQL Injection against Postgres

# Baseline Test
GET https://localhost:7086/database/inject/Postgres?name=NotAdmin

### Test SQL Injection against Postgres

# Basic OR-based injection
GET https://localhost:7086/database/inject/Postgres?name=NotAdmin' OR '1'='1

### Test SQL Injection against Postgres

# Union-based injection
GET https://localhost:7086/database/inject/Postgres?name=NotAdmin' UNION SELECT NULL, current_setting('server_version')--

### Test SQL Injection against Postgres

# Error-based injection
GET https://localhost:7086/database/inject/Postgres?name=NotAdmin' AND 1=CAST((SELECT current_setting('server_version')) as integer)--

### Test SQL Injection against Postgres

# Time-based Blind SQL injection
GET https://localhost:7086/database/inject/Postgres?name=NotAdmin'; SELECT CASE WHEN (SELECT current_setting('server_version')) LIKE '%13%' THEN pg_sleep(10) ELSE pg_sleep(0) END--

### Test SQL Injection against MySql

# Baseline Test
GET https://localhost:7086/database/inject/MySql?name=Admin

### Test SQL Injection against MySql

# Basic OR-based injection
GET https://localhost:7086/database/inject/MySql?name=NotAdmin' OR '1'='1

### Test SQL Injection against MySql

# Union-based injection
GET https://localhost:7086/database/inject/MySql?name=NotAdmin' UNION SELECT null, version() -- 

### Test SQL Injection against MySql

# Error-based injection
GET https://localhost:7086/database/inject/MySql?name=NotAdmin' AND EXTRACTVALUE(1,CONCAT(0x7e,(SELECT version()),0x7e)) -- 

### Test SQL Injection against MySql

# Time-based Blind SQL injection
GET https://localhost:7086/database/inject/MySql?name=NotAdmin' AND SLEEP(10) -- 

### Test Outbound HTTP Requests

# Test HttpClient endpoint
GET https://localhost:7086/outbound/httpclient/https%3A%2F%2Fwww.google.com

### Test Outbound HTTP Requests

# Test WebRequest endpoint 
GET https://localhost:7086/outbound/webrequest/https%3A%2F%2Fwww.google.com

### Test Outbound HTTP Requests

# Test RestSharp endpoint 
GET https://localhost:7086/outbound/restsharp/https%3A%2F%2Fwww.google.com

### Test Content Types

# Test Form URL Encoded
POST https://localhost:7086/contenttype/form
Content-Type: application/x-www-form-urlencoded

key1=value1&key2=value2

### Test Content Types

# Test Multipart Form Data
POST https://localhost:7086/contenttype/multipart
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="field1"

value1
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="file1"; filename="test.txt"
Content-Type: text/plain

aaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### Test Content Types

# Test Plain Text
POST https://localhost:7086/contenttype/text
Content-Type: text/plain

This is a plain text message

### Test Content Types

# Test JSON
POST https://localhost:7086/contenttype/json
Content-Type: application/json

{
  "key1": "value1",
  "key2": "value2"
}

### Test Content Types

# Test XML
POST https://localhost:7086/contenttype/xml
Content-Type: application/xml

<?xml version="1.0" encoding="UTF-8"?>
<root>
  <item>value1</item>
  <item>value2</item>
  <item>value2</item>
  <item>value2</item>
  <item>value2</item>
  <item>value2</item>
  <item>value2</item>
  <item>value2</item>
  <item>value2</item>
  <item>value2</item>
  <item>value2</item>
  <item>value2</item>
  <item>value2</item>
  <item>value2</item>
  <item>value2</item>
  <item>value2</item>
  <item>value2</item>
  <item>value2</item>
  <item>value2</item>
  <item>value2</item>
  <item>value2</item>
  <item>value2</item>
  <item>value2</item>
  <item>value2</item>
  <item>value2</item>
  <item>value2</item>
  <item>value2</item>
  <item>value2</item>
  <nested>
    <item>value3</item>
    <item text="value4" />
    <item value="value5" />
  </nested>
</root>
