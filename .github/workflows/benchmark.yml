on:
    push: {}
    workflow_call: {}

jobs:
    benchmark:
        runs-on: ubuntu-latest

        services:
            mysql:
                image: mysql:8.0
                env:
                    MYSQL_ROOT_PASSWORD: mypassword
                    MYSQL_DATABASE: catsdb
                ports:
                    - 27015:3306
            sqlserver:
                image: mcr.microsoft.com/mssql/server:2022-latest
                env:
                    ACCEPT_EULA: Y
                    SA_PASSWORD: Strong@Password123!
                    MSSQL_PID: Express
                ports:
                    - 27014:1433

            postgres:
                image: postgres:14-alpine
                env:
                    POSTGRES_PASSWORD: password
                    POSTGRES_USER: root
                    POSTGRES_DB: main_db
                ports:
                    - 27016:5432

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up .NET
              uses: actions/setup-dotnet@v2
              with:
                  dotnet-version: "8.0.x" # Adjust based on your target framework

            - name: Install k6
              run: |
                  sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
                  echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
                  sudo apt-get update
                  sudo apt-get install k6

            - name: Build mock server
              run: |
                  dotnet build e2e/Aikido.Zen.Server.Mock/Aikido.Zen.Server.Mock.csproj

            - name: Run mock server
              run: |
                  dotnet run --project e2e/Aikido.Zen.Server.Mock/Aikido.Zen.Server.Mock.csproj --urls "http://localhost:5080" &
                  export AIKIDO_TOKEN="123"
                  export AIKIDO_URL="http://localhost:5080"
                  export AIKIDO_REALTIME_URL="http://localhost:5080"

            - name: Build sample apps
              run: |
                  dotnet build e2e/sample-apps/MySqlSampleApp/MySqlSampleApp.csproj
                  dotnet build e2e/sample-apps/SqlServerSampleApp/SqlServerSampleApp.csproj
                  dotnet build e2e/sample-apps/SQLiteSampleApp/SqliteSampleApp.csproj
                  dotnet build e2e/sample-apps/PostgresSampleApp/PostgresSampleApp.csproj

            - name: Run MySqlSampleApp without Zen
              run: |
                  pkill dotnet || true
                  export AIKIDO_DISABLED="true"
                  dotnet run --project e2e/sample-apps/MySqlSampleApp/MySqlSampleApp.csproj --urls "http://localhost:5081" &
                  sleep 5
                  avgResponseTimeTrueMySql=$(k6 run benchmark.js --env APP_URL=http://localhost:5081)
                  echo "MySqlSampleApp Average Response Time without Zen: $avgResponseTimeTrueMySql"

            - name: Run MySqlSampleApp with Zen
              run: |
                  pkill dotnet || true
                  export AIKIDO_DISABLED="false"
                  dotnet run --project e2e/sample-apps/MySqlSampleApp/MySqlSampleApp.csproj --urls "http://localhost:5081" &
                  sleep 5
                  avgResponseTimeFalseMySql=$(k6 run benchmark.js --env APP_URL=http://localhost:5081)
                  echo "MySqlSampleApp Average Response Time with Zen: $avgResponseTimeFalseMySql"

            - name: Run SqlServerSampleApp without Zen
              run: |
                  pkill dotnet || true
                  export AIKIDO_DISABLED="true"
                  dotnet run --project e2e/sample-apps/SqlServerSampleApp/SqlServerSampleApp.csproj --urls "http://localhost:5082" &
                  sleep 5
                  avgResponseTimeTrueSqlServer=$(k6 run benchmark.js --env APP_URL=http://localhost:5082)
                  echo "SqlServerSampleApp Average Response Time without Zen: $avgResponseTimeTrueSqlServer"

            - name: Run SqlServerSampleApp with Zen
              run: |
                  pkill dotnet || true
                  export AIKIDO_DISABLED="false"
                  dotnet run --project e2e/sample-apps/SqlServerSampleApp/SqlServerSampleApp.csproj --urls "http://localhost:5082" &
                  sleep 5
                  avgResponseTimeFalseSqlServer=$(k6 run benchmark.js --env APP_URL=http://localhost:5082)
                  echo "SqlServerSampleApp Average Response Time with Zen: $avgResponseTimeFalseSqlServer"

            - name: Run SQLiteSampleApp without Zen
              run: |
                  pkill dotnet || true
                  export AIKIDO_DISABLED="true"
                  dotnet run --project e2e/sample-apps/SQLiteSampleApp/SqliteSampleApp.csproj --urls "http://localhost:5083" &
                  sleep 5
                  avgResponseTimeTrueSQLite=$(k6 run benchmark.js --env APP_URL=http://localhost:5083)
                  echo "SQLiteSampleApp Average Response Time without Zen: $avgResponseTimeTrueSQLite"

            - name: Run SQLiteSampleApp with Zen
              run: |
                  pkill dotnet || true
                  export AIKIDO_DISABLED="false"
                  dotnet run --project e2e/sample-apps/SQLiteSampleApp/SqliteSampleApp.csproj --urls "http://localhost:5083" &
                  sleep 5
                  avgResponseTimeFalseSQLite=$(k6 run benchmark.js --env APP_URL=http://localhost:5083)
                  echo "SQLiteSampleApp Average Response Time with Zen: $avgResponseTimeFalseSQLite"

            - name: Run PostgresSampleApp without Zen
              run: |
                  pkill dotnet || true
                  export AIKIDO_DISABLED="true"
                  dotnet run --project e2e/sample-apps/PostgresSampleApp/PostgresSampleApp.csproj --urls "http://localhost:5084" &
                  sleep 5
                  avgResponseTimeTruePostgres=$(k6 run benchmark.js --env APP_URL=http://localhost:5084)
                  echo "PostgresSampleApp Average Response Time without Zen: $avgResponseTimeTruePostgres"

            - name: Run PostgresSampleApp with Zen
              run: |
                  pkill dotnet || true
                  export AIKIDO_DISABLED="false"
                  dotnet run --project e2e/sample-apps/PostgresSampleApp/PostgresSampleApp.csproj --urls "http://localhost:5084" &
                  sleep 5
                  avgResponseTimeFalsePostgres=$(k6 run benchmark.js --env APP_URL=http://localhost:5084)
                  echo "PostgresSampleApp Average Response Time with Zen: $avgResponseTimeFalsePostgres"

            - name: Compare Response Times
              run: |
                  difference=$(echo "$avgResponseTimeTrue - $avgResponseTimeFalse" | bc -l | awk '{print sqrt($1^2)}')
                  if (( $(echo "$difference > 5" | bc -l) )); then
                      echo "Response time difference is greater than 5ms: ${difference}ms" >&2
                      exit 1
                  else
                      echo "Response time difference is within acceptable range: ${difference}ms"
                  fi
