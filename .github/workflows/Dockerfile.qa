# Adjust DOTNET_OS_VERSION as desired
ARG DOTNET_OS_VERSION="-alpine"
ARG DOTNET_SDK_VERSION=9.0

FROM mcr.microsoft.com/dotnet/sdk:${DOTNET_SDK_VERSION}${DOTNET_OS_VERSION} AS build
WORKDIR /src

# copy everything
COPY . ./

# === THIS SECTION IS MODIFIED FOR QA STEP ===
# Copy the dev firewall package
COPY Aikido.Zen.*.nupkg ./local-feed/

# Create NuGet.Config to add local package source
RUN echo '<?xml version="1.0" encoding="utf-8"?>\n\
<configuration>\n\
  <packageSources>\n\
    <add key="nuget.org" value="https://api.nuget.org/v3/index.json" />\n\
    <add key="local-feed" value="/src/local-feed" />\n\
  </packageSources>\n\
</configuration>' > NuGet.Config

# Remove existing Aikido.Zen reference
RUN dotnet remove package Aikido.Zen || true

# Add the local package with version
RUN dotnet add package Aikido.Zen --version 0.0.0-qa

# Restore dependencies
RUN dotnet restore

# Build and publish a release
RUN dotnet publish -c Release -o /app
# === END OF MODIFIED SECTION ===

# final stage/image
FROM mcr.microsoft.com/dotnet/aspnet:${DOTNET_SDK_VERSION}
ENV ASPNETCORE_URLS http://+:8080
ENV ASPNETCORE_ENVIRONMENT Production
ENV AIKIDO_BLOCK true
EXPOSE 8080
WORKDIR /app
COPY --from=build /app .
ENTRYPOINT [ "dotnet", "zen-demo-dotnet.dll" ]
